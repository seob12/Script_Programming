if __name__ == '__main__':
    # 1)
    # 연도 대회명 경기수 승리 패배 승률 킬 데스 어시스트 K/M D/M A/M KDA 킬관여율
    title = 'year event	total	win	loss	win_rate	kill	death	assist	K/M	D/M	A/M	KDA	kill_p'
    title_list = []
    # TODO:
    for i in title.split():
        title_list.append(i)
    print('title_list', title_list)

    # 2)
    data = '''2021 LCK_서머_PS	8	3	5	37.5	13	22	35	1.6	2.8	4.4	2.2	65.4
2022 LCK_서머	44	31	13	70.5	97	85	257	2.2	1.9	5.8	4.2	65.5
2022 MSI	24	18	6	75	81	44	126	3.4	1.8	5.3	4.7	59
2022 LCK_스프링_PS	7	6	1	85.7	18	8	48	2.6	1.1	6.9	8.3	56.4
2022 LCK_스프링	43	36	7	83.7	160	81	235	3.7	1.9	5.5	4.9	58.8
2021 롤드컵	14	10	4	71.4	26	20	67	1.9	1.4	4.8	4.7	51.4
2021 롤드컵_국대선발전	5	3	2	60	15	9	24	3	1.8	4.8	4.3	55.6
2021 LCK_서머_PS	11	7	4	63.6	36	31	59	3.3	2.8	5.4	3.1	57.5
2021 LCK_서머	44	25	19	56.8	99	89	213	2.3	2	4.8	3.5	58.6
2021 LCK_스프링_PS	7	3	4	42.9	15	16	21	2.1	2.3	3	2.3	44.3
2021 LCK_스프링	23	15	8	65.2	70	40	157	3	1.7	6.8	5.7	69
2020 롤드컵_국대선발전	7	3	4	42.9	24	12	53	3.4	1.7	7.6	6.4	75.9
2020 LCK_서머_PS	2	1	1	50	2	4	13	1	2	6.5	3.8	54
2020 LCK_서머	28	16	12	57.1	74	51	152	2.6	1.8	5.4	4.4	67.7
2020 MSC	3	1	2	33.3	12	9	12	4	3	4	2.7	63.7
2020 LCK_스프링_PS	7	6	1	85.7	24	7	41	3.4	1	5.9	9.3	70.6
2020 LCK_스프링	44	30	14	68.2	127	62	219	2.9	1.4	5	5.6	66.7
2019 KeSPA컵	7	3	4	42.9	16	17	37	2.3	2.4	5.3	3.1	68.6
2019 롤드컵	14	9	5	64.3	51	34	77	3.6	2.4	5.5	3.8	58.4
2019 LCK_서머_PS	13	11	2	84.6	57	21	73	4.4	1.6	5.6	6.2	62.4
2019 리프트_라이벌즈	3	2	1	66.7	9	5	16	3	1.7	5.3	5	67.7
2019 LCK_서머	42	26	16	61.9	92	85	190	2.2	2	4.5	3.3	62.3
2019 MSI	15	9	6	60	53	26	77	3.5	1.7	5.1	5	58
2019 LCK_스프링_PS	6	6	0	100	28	12	34	4.7	2	5.7	5.2	65.8
2019 LCK_스프링	44	31	13	70.5	103	80	213	2.3	1.8	4.8	4	56.4
2018 KeSPA컵	7	5	2	71.4	21	18	47	3	2.6	6.7	3.8	69.7
2018 롤드컵_국대선발전	5	2	3	40	10	8	13	2	1.6	2.6	2.9	79
2018 리프트_라이벌즈	4	2	2	50	11	7	22	2.8	1.8	5.5	4.7	71
2018 LCK_서머	25	10	15	40	63	55	110	2.5	2.2	4.4	3.1	72.9
2018 LCK_스프링_PS	7	3	4	42.9	13	17	33	1.9	2.4	4.7	2.7	69
2018 LCK_스프링	46	23	23	50	141	83	211	3.1	1.8	4.6	4.2	73.8
2017 올스타전	6	3	3	50	26	19	22	4.3	3.2	3.7	2.5	61.3
2017 KeSPA컵	5	2	3	40	17	19	22	3.4	3.8	4.4	2.1	73.8
2017 롤드컵	19	11	8	57.9	45	36	89	2.4	1.9	4.7	3.7	74.2
2017 LCK_서머_PS	14	9	5	64.3	40	24	61	2.9	1.7	4.4	4.2	73.9
2017 리프트_라이벌즈	3	2	1	66.7	9	7	9	3	2.3	3	2.6	44
2017 LCK_서머	41	26	15	63.4	120	86	173	2.9	2.1	4.2	3.4	65
2017 MSI	17	14	3	82.4	65	31	80	3.8	1.8	4.7	4.7	54.3
2017 LCK_스프링_PS	3	3	0	100	15	9	25	5	3	8.3	4.4	67
2017 LCK_스프링	42	32	10	76.2	196	89	223	4.7	2.1	5.3	4.7	65.3
2016 올스타전	3	3	0	100	17	8	16	5.7	2.7	5.3	4.1	57.3
2016 KeSPA컵	6	4	2	66.7	23	10	30	3.8	1.7	5	5.3	56.7
2016 롤드컵	20	14	6	70	82	51	104	4.1	2.6	5.2	3.6	64.7
2016 LCK_서머_PS	5	2	3	40	6	13	25	1.2	2.6	5	2.4	68.6
2016 LCK_서머	41	28	13	68.3	162	84	205	4	2	5	4.4	66.8
2016 MSI	17	12	5	70.6	84	37	91	4.9	2.2	5.4	4.7	65.3
2015 올스타전	5	4	1	80	31	11	28	6.2	2.2	5.6	5.4	59.4
2016 LCK_스프링_PS	11	9	2	81.8	38	19	66	3.5	1.7	6	5.5	66.5
2016 IEM_카토비체_WC	7	7	0	100	31	13	43	4.4	1.9	6.1	5.7	56
2016 LCK_스프링	40	26	14	65	135	86	226	3.4	2.2	5.7	4.2	72
2015 KeSPA컵	4	2	2	50	19	10	23	4.8	2.5	5.8	4.2	70
2015 롤드컵	12	11	1	91.7	55	18	77	4.6	1.5	6.4	7.3	64.3
2015 LCK_서머_PS	3	3	0	100	20	5	14	6.7	1.7	4.7	6.8	56.7
2015 LCK_서머	29	24	5	82.8	166	60	158	5.7	2.1	5.4	5.4	69.2
2015 LCK_스프링_PS	4	3	1	75	25	5	28	6.3	1.3	7	10.6	82.5
2015 MSI	10	7	3	70	44	20	68	4.4	2	6.8	5.6	68.4
2015 LCK_스프링	20	14	6	70	114	52	113	5.7	2.6	5.7	4.4	71.1
2014 롤드컵_국대선발전	7	1	6	14.3	31	22	30	4.4	3.1	4.3	2.8	78.6
2014 LCK_서머	10	4	6	40	41	24	50	4.1	2.4	5	3.8	66.5
2014 NLB_서머	10	8	2	80	61	22	71	6.1	2.2	7.1	6	73.4
2014 올스타전	9	9	0	100	63	22	65	7	2.4	7.2	5.8	67.3
2014 LCK_스프링	11	5	6	45.5	38	32	80	3.5	2.9	7.3	3.7	68.6
2014 NLB_스프링	9	6	3	66.7	38	27	63	4.2	3	7	3.7	65
2014 마스터즈	13	9	4	69.2	66	35	107	5.1	2.7	8.2	4.9	66.4
2013 LCK_윈터	15	15	0	100	86	26	97	5.7	1.7	6.5	7	68.3
2013 WCG_국대선발전	4	2	2	50	17	12	13	4.3	3	3.3	2.5	47.3
2013 롤드컵	18	15	3	83.3	80	39	108	4.4	2.2	6	4.8	62.3
2013 롤드컵_국대선발전	4	3	1	75	28	10	32	7	2.5	8	6	77.3
2013 LCK_서머	18	15	3	83.3	110	46	117	6.1	2.6	6.5	4.9	69.4
2013 AMD_챔피언십	4	2	2	50	22	11	29	5.5	2.8	7.3	4.6	76.5
2013 LCK_스프링	20	14	6	70	133	63	137	6.7	3.2	6.9	4.3	74.3'''

    # 2)
    data_list = []
    # TODO:   tempDict = title_list[j]
    for i in data.split("\n"):
        tempDict = {}
        valueList = i.split()
        for j in range(len(title_list)):
            if (valueList[j].isdecimal() == 1):  # 정수형으로 변활할수 있는지 검사하고 참이면 변환
                tempDict[title_list[j]] = int(valueList[j])
            else:
                tempDict[title_list[j]] = valueList[j]
        data_list.append(tempDict)  # tempDict에 저장된 원소들을 다시 data_list에 저장
    print('data_list', data_list)

    # 3)
    data_list_filtered = []
    # TODO:
    def filtering(dictData):  # 필터링해주는 함수를 선언
        if dictData["event"] in ["롤드컵", "MSI"]:  # 사전 자료형의 event 키값이 롤드컵, MSI인 경우
            return True
        elif dictData["event"].find("PS") == -1 and dictData["event"].find("LCK") != -1:  # 사전 자료형의 키값이 LCK이되 PS를 포함하지 않는 경우
            return True
        else:
            return False

    data_list_filtered = list(filter(filtering, data_list))  # data_list에서 필터링 함수를 거친 리스트가 data_list_filtered에 저장
    print('data_list_filtered', data_list_filtered)  # 필터링된 data_list 출력

    # 4)
    # TODO:
    def search(q, a):  # 원하는 대회 정보를 검색하는 함수를 선언
        for i in data_list_filtered:
            if a == "LCK":
                if i["year"] == q and i["event"].split("_")[0] == a:
                    print(i)
            if i["year"] == q and i["event"] == a:
                print(i)

    while(1):
        faker = input("연도 대회명: ")
        if faker != 'Q':  # 'Q'가 입력이 되지 않았을 때
            year, event = faker.split()
            search(int(year), event)
        else:  # 'Q'가 입력됐을 때
            break  # 종료